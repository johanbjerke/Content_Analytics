<dashboard>
  <label>Documentation</label>
     <search>
    <query>| inputlookup ColorScheme.csv WHERE Enabled="Yes"</query>
    <done>
      <condition match="'job.resultCount' &gt; 0">
        <set token="Phase0Color">$result.Phase0$</set>
        <set token="Phase1Color">$result.Phase1$</set>
        <set token="Phase2Color">$result.Phase2$</set>
        <set token="SelectedColor">$result.Selected$</set>
      </condition>
    </done>
  </search>
  <row>
    <panel>
      <html>
    <h1>Installation</h1>
      <ol>
        <li>
          Install app dependencies, see list below for links to the apps required/recommended.
        </li>
         <li>
          Generate the required lookups if they are empty, see links in the table below. 
        </li>
      </ol>
  </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Step 1 - App dependencies</title>
      <table>
        <title>Make sure you have the Common Information Model app and at least one of the "Content" apps installed</title>
        <search>
          <query>| inputlookup AppDependencies
| join type=outer App 
    [| rest /services/apps/local 
    | table title *ersion* *nabled* *isabled* label update.homepage details
    | eval Status="Good" 
    | rename title as App] 
| rex field=version "^(?&lt;majorminor&gt;\d*\.\d*)"
| eval Comment=case(
(disabled=1 OR isnull(disabled)), Comment,
1=1,""
)
| eval Status=case(
len(Comment)&gt;0 AND Dependency="Required","Required",
len(Comment)&gt;0 AND Dependency="Nice to have","Recommended",
1=1,Status)
| rename version as Version, disabled AS Disabled, "update.version" AS "Latest Version"
| eval "Splunkbase Link"="Click here"
| table Title App_Name Version "Latest Version" Disabled Status Comment "Splunkbase Link" Url</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">cell</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Status">
          <colorPalette type="map">{"Good":#53A051,"Required":#DC4E41,"Recommended":#F8BE34}</colorPalette>
        </format>
        <format type="color" field="Disabled">
          <colorPalette type="map">{"0":#53A051,"1":#DC4E41}</colorPalette>
        </format>
        <fields>["Title","App_Name","Version","Latest Version","Disabled","Status","Comment","Splunkbase Link"]</fields>
        <drilldown>
          <link target="_blank">$row.Url%7Cn$</link>
        </drilldown>
      </table>
    </panel>
    <panel>
      <title>Step 2 - Lookup dependencies</title>
      <table>
        <title>Make sure both of these lookups contain data. Click the link in the table to generate them after initial install. These lookups are refreshed every 24 hours.</title>
        <search>
          <query>| makeresults count=2
| streamstats count
| eval Lookup=if(count=1,"Datamodel_Event_Summary.csv","Installed_sourcetypes.csv")
| eval Url=if(count=1,"Content_Analytics/search?q=%7C%20savedsearch%20nosubstitution%3Dt%20\"Generate%20Datamodel%20Event%20Summary%20-%20Scheduled\"","Content_Analytics/search?q=%7C%20savedsearch%20\"Generate%20Sourcetype%20Summary%20-%20Scheduled\"")
| join type=outer count [
| inputlookup Datamodel_Event_Summary.csv
| stats count AS Rows
| eval count=1
]
| join type=outer count [
| inputlookup Installed_sourcetypes.csv
| stats count AS Rows
| eval count=2
]
| eval Rows=coalesce(Rows,0)
| eval Link="Click to generate lookup"
| eval Status=if(Rows=0 OR isnull(Rows),"Bad","Good")
| table Lookup Rows Status Link Url</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">cell</option>
        <format type="color" field="Status">
          <colorPalette type="map">{"Good":#53A051,"Bad":#DC4E41}</colorPalette>
        </format>
        <format type="color" field="Disabled">
          <colorPalette type="map">{"0":#53A051,"1":#DC4E41}</colorPalette>
        </format>
        <format type="color" field="Rows">
          <colorPalette type="list">[#DC4E41,#53A051]</colorPalette>
          <scale type="threshold">0</scale>
        </format>
        <fields>["Lookup","Rows","Status","Link"]</fields>
        <drilldown>
          <link target="_blank">/app/$row.Url%7Cn$</link>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <html>
    <h1>What does this app do?</h1>
          <p>The app extracts configurations from your Splunk environment and provides analytics, and easy insights mapped against "Content" provided by apps such as Enterprise Security (ES), ES Content Updates (ESCU), Splunk Security Essentials (SSE). This app is a reporting layer that answers some fundamental questions about how mature your environment is measured against some key dimensions like; best practice Security Use Cases, MITRE Tactics, Cyber Kill Chain, CIS Controls, NIST Cybersecurity Framework.</p>
    <p>The app has multiple uses, below are some examples of things that can be accomplished with this app.</p>
    <ul>
      <li>
        Mapping and Gap Analysis against MITRE Attack Framework, Cyber Kill Chain, CIS Controls and NIST Cybersecurity Framework.
      </li>
       <li>
        Easily finding Content you can enable to fill in coverage gaps.
      </li>
        <li>
        Mapping Detection Searches to Sourcetypes that are configured in the environment.
      </li>
        <li>
        Mapping Sourcetypes to Detection Searches even if the Detection Search is based on a Datamodel.
      </li>
        <li>
        Create reports that shows what future Content coverage would be if you onboarded a new datasource.
      </li>
        <li>
        Find Content you can enable for a sourcetype.
      </li>
    </ul>


          <p>Each panel is divided into three parts that categorizes the Content by the level of effort required to utilize it:</p>
          <ol>
      <li>
        Content that is enabled and in use today
      </li>
       <li>
        Content that is available to enable with low effort required (Add-ons are installed, data exists etc.)
      </li>
        <li>
        Content that requires more data to be enabled (Add-ons are not installed, data does not exist etc.)
      </li>
    </ol>
    <br />
    <h1>What does "Current", "Potential" and "Needs more data" mean?</h1>

<ul>
      <li>
        “Current” means content that is enabled and working right now. 
      </li>
       <li>
        “Potential“ means you can enable this content with relatively low effort, i.e. data is either indexed or exist in the DM. Word of caution, having the right sourcetype does <b>not guarantee</b> that the content will actually work. There might be other requirements for this content like a pre-populated lookups or specific fields that need to exist. In the Content table you can click through for each piece of Content to get to the originating app where the full requirements are explained. The “Potential“ is essentially a gauge of estimated effort required to enable the content, i.e. the lower hanging fruit. Having Add-Ons installed and having data flowing in are two big hurdles that have been overcome in the environment for Content marked as “Potential“. 
      </li>
        <li>
        “Needs more data” means that you don’t have data in Splunk to support this content. 
      </li>
        <li>
        “Selected Sourcetypes” means you have selected a specific sourcetype in the multi-select dropdown at the top. In this scenario we will highlight content that would potentially benefit from this sourcetype.  
      </li>
    </ul>
<p>Depending on what type of content we are analyzing, refer to this table to make it more clear.</p>
 <table class="table table-chrome table-hover">
            <thead>
                <tr>
                    <th>Content Type</th><th>Status: Current</th><th>Status: Potential</th><th>Status: Needs more data</th><th>Status: Selected sourcetypes</th>
                </tr>
            </thead>
            
            <tbody>
              <tr>
                <td>Datamodel</td>
                <td><ul><li>Content is enabled</li>
                    <li>DM has data</li>
                    <li>DM is accelerated</li>
                    <li>Showing sourcetypes that are in the DM only</li>
                    </ul>
                </td>
                <td><ul><li>Content is enabled or disabled</li>
                    <li>DM does not data</li>
                    <li>Indexed data exist</li>
                    <li>DM accelerated or not accelerated</li>
                    <li>Showing sourcetypes that have indexed data</li>
                    </ul>
                    </td>
                <td><ul><li>Content is enabled or disabled</li>
                    <li>DM does not have data</li>
                    <li>No indexed data exist</li>
                    <li>DM accelerated or not accelerated</li>
                    </ul>
                </td>
                <td>Showing the selected sourcetypes that are linked to the content</td>
              </tr>
              <tr>
              <td>Indexed data</td>
                <td><ul><li>Content is enabled</li>
                    <li>Indexed data exist</li>
                    <li>Showing sourcetypes that have indexed data</li>
                    </ul>
                </td>
                <td><ul><li>Content is disabled</li>
                    <li>Indexed data exist</li>
                    <li>Showing sourcetypes that have indexed data</li>
                    </ul>
                    </td>
                <td><ul><li>Content is enabled or disabled</li>
                    <li>No Indexed data exist</li>
                    <li>Showing sourcetypes that are linked to the content directly</li>
                    </ul>
                </td>
                <td>Showing the selected sourcetypes that are linked to the content</td>
              </tr>
            </tbody>
        </table>
<br />
    <h1>How does it all work?</h1>
    
    <p>The app extracts datamodel, eventtype, tag and sourcetype configurations from the system and maps this to content provided through Enterprise Security, Enterprise Security Content Update, Security Essentials or any other app that provides Splunk searches that can be classified as content.
    </p>
    <p>
The app also runs a scheduled search to check if we are indexing data linked to the content to highlight which content can easily be enabled and which content needs more data to function.
</p>
<p>
The high level process is visualised in the Sankey below:
</p>
    
  </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Content -&gt; Content Source -&gt; Content Type -&gt; Content Status in environment</title>
      <viz type="sankey_diagram_app.sankey_diagram">
        <search>
          <query>| inputlookup Sample_Sankey_For_Documentation.csv
| table LinkSource LinkDestination count</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="sankey_diagram_app.sankey_diagram.colorMode">sequential</option>
        <option name="sankey_diagram_app.sankey_diagram.maxColor">#$Phase0Color$</option>
        <option name="sankey_diagram_app.sankey_diagram.minColor">#F5F8F6</option>
        <option name="sankey_diagram_app.sankey_diagram.numOfBins">9</option>
        <option name="sankey_diagram_app.sankey_diagram.showLegend">true</option>
        <option name="sankey_diagram_app.sankey_diagram.useColors">true</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </viz>
    </panel>
  </row>
  <row>
    <panel>
      <html>
            <h1>App artefacts</h1>

            <p>The app contains the following artefacts worth noting:</p>
            <ul>
                <li>
                    Savedsearch: Generate Datamodel Event Summary - Scheduled<br/>
                    This search generates the lookup that contains a count of events indexed per sourcetype. It is run every 24 hours.
                </li>
                <li>
                    Savedsearch: Generate Sourcetype Summary - Scheduled<br/>
                    This search generates the lookup the contains all configured sourcetypes in the system. It is run every 24 hours.
                </li>
                <li>Savedsearch: Sample Sankey Diagram on Documentation Page<br/>
                    This search generates the lookup used by the Sankey diagram used on the documentation page. This search can be run to update the Sankey to the current environment instead of the bundled sample data.
                </li>
                <li>
                    Savedsearch: Generate MITRE matrix list<br/>
                    This search formats the MITRE Attack framework table into a list format.
                </li>
                <li>
                    Custom search command: getSSE<br/>
                    This custom search command getSSE extracts the content provided from the Splunk Security Essentials App into the search pipeline.
                </li>
            </ul>
        </html>
    </panel>
  </row>
</dashboard>