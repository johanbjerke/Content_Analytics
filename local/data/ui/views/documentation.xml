<dashboard>
  <label>Documentation</label>
  <row>
    <panel>
      <html>
    <h1>Installation</h1>
      <ol>
        <li>
          Install app depencencies, see list below for links to the apps required/recommended.
        </li>
         <li>
          Generate the required lookups if they are empty, see links in the table below. 
        </li>
      </ol>
  </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>1. App dependencies</title>
      <table>
        <title>Make sure you have the Common Information Model app and at least one of the "Content" apps installed</title>
        <search>
          <query>| makeresults count=5 
| streamstats count as App_Num 
| eval App_Name = 
    case(
    App_Num="1", "Splunk_SA_CIM",
    App_Num="2", "DA-ESS-ContentUpdate",
    App_Num="3", "Splunk_Security_Essentials",
    App_Num="4", "SplunkEnterpriseSecuritySuite", 
    App_Num="5", "sankey_diagram_app"
    ) 
| join type=outer App_Name 
    [| rest /services/apps/local 
    | table title *ersion* *nabled* *isabled* label update.homepage details
    | eval Status="Good" 
    | rename title as App_Name, label AS Title,details AS Url] 
| rex field=version "^(?&lt;majorminor&gt;\d*\.\d*)"
| eval Comment=case(
App_Name="Splunk_SA_CIM" AND (disabled=1 OR isnull(disabled)), "App needs to be installed and enabled.",
App_Name="DA-ESS-ContentUpdate" AND (disabled=1 OR isnull(disabled)), "This app contains a lot of the content so it is recommended to have this installed.",
App_Name="Splunk_Security_Essentials" AND (disabled=1 OR isnull(disabled)), "This app contains a lot of the content so it is recommended to have this installed.",
App_Name="SplunkEnterpriseSecuritySuite" AND (disabled=1 OR isnull(disabled)), "This app contains a lot of the content so it is recommended to have this installed.",
App_Name="sankey_diagram_app" AND (disabled=1 OR isnull(disabled)), "Without this app you will miss out on the Sankey vizualisation.",
1=1,""
)
| eval Status=if(len(Comment)&gt;0,"Bad",Status)
| rename version as Version, disabled AS Disabled
| eval "Splunkbase Link"="Click here"
| table Title App_Name Version Disabled Status Comment "Splunkbase Link" Url</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">cell</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Status">
          <colorPalette type="map">{"Good":#53A051,"Bad":#DC4E41}</colorPalette>
        </format>
        <format type="color" field="Disabled">
          <colorPalette type="map">{"0":#53A051,"1":#DC4E41}</colorPalette>
        </format>
        <fields>["Title","App_Name","Version","Disabled","Status","Comment","Splunkbase Link"]</fields>
        <drilldown>
          <link target="_blank">$row.Url%7Cn$</link>
        </drilldown>
      </table>
    </panel>
    <panel>
      <title>2. Lookup dependencies</title>
      <table>
        <title>Make sure both of these lookups contain data. Click the link in the table to generate them after initial install. These lookups are refreshed every 24 hours.</title>
        <search>
          <query>| inputlookup Datamodel_Event_Summary.csv 
| eval Lookup="Datamodel_Event_Summary.csv" 
| stats count AS Rows by Lookup
| eval Url="Splunk_Content_Analytics/search?q=%7C%20savedsearch%20nosubstitution%3Dt%20\"Generate%20Datamodel%20Event%20Summary%20-%20Scheduled\""
| append [
| inputlookup Installed_sourcetypes.csv
| eval Lookup="Installed_sourcetypes.csv" 
| stats count AS Rows by Lookup
| eval Url="Splunk_Content_Analytics/search?q=%7C%20savedsearch%20\"Generate%20Sourcetype%20Summary%20-%20Scheduled\""
]
| eval Link="Click to generate lookup"
| eval Status=if(Rows=0 OR isnull(Rows),"Bad","Good")
| table Lookup Rows Status Link Url</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">cell</option>
        <format type="color" field="Status">
          <colorPalette type="map">{"Good":#53A051,"Bad":#DC4E41}</colorPalette>
        </format>
        <format type="color" field="Disabled">
          <colorPalette type="map">{"0":#53A051,"1":#DC4E41}</colorPalette>
        </format>
        <format type="color" field="Rows">
          <colorPalette type="list">[#DC4E41,#53A051]</colorPalette>
          <scale type="threshold">0</scale>
        </format>
        <fields>["Lookup","Rows","Status","Link"]</fields>
        <drilldown>
          <link target="_blank">/app/$row.Url%7Cn$</link>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <html>
    <h1>What does this app do?</h1>
    <p>There are two main types of security content in the Splunk repositories:</p>
    <ul>
      <li>
        Content linked directly to a sourcetype (i.e. data source)
      </li>
       <li>
        Content linked to a data model
      </li>
    </ul>
<p>
Most content Splunk provides are linked to a data model. The reasons for writing content linked to data models are performance and universality. Datamodel searches are faster than index searches. Having content linked to a data model makes it work with all possible data sources (universality) as long as they contain the right data. Datamodels is a good way of doing this. 
</p>
<p>
The downside of using data models for content definitions is that there is no direct link between a specific sourcetype (data source) and the data model. This link is contained in the AddOn for that sourcetype so only that author of the AddOn would know which datamodels would be populated with data if it was installed.
</p>
<p>
This app extracts the information from AddOns installed in a Splunk environment and merges this with the data models as referenced by the content to create this combined view. In addition, it also links all content using standard index based searches to the same view. 
</p>
<p>
In addition to this, the app contains a sample set of standard sourcetypes to choose from if no appropriate AddOns are installed in the system. This allows you to quickly find out which content can be enabled if you onboard a particular data source. It also allows you to see aa set of source types linked to a use case or specific detection. 
</p>
  </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
    <h1>How does it all work?</h1>
    
    <p>The app extracts datamodel, eventtype, tag and sourcetype configurations from the system and maps this to content provided through Enterprise Security, Enterprise Security Content Update, Security Essentials or any other app that provides Splunk searches that can be classified as content.
    </p>
    <p>
The app also runs a scheduled search to check if we are indexing data linked to the content to highlight which content can easily be enabled and which content needs more data to function.
</p>
<p>
The high level process is visualised in the Sankey below:
</p>
    
  </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Content -&gt; Content Source -&gt; Content Type -&gt; Content Status in environment</title>
      <viz type="sankey_diagram_app.sankey_diagram">
        <search>
          <query>| inputlookup Sample_Sankey_For_Documentation.csv
| table LinkSource LinkDestination count</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="sankey_diagram_app.sankey_diagram.colorMode">sequential</option>
        <option name="sankey_diagram_app.sankey_diagram.maxColor">#638771</option>
        <option name="sankey_diagram_app.sankey_diagram.minColor">#F5F8F6</option>
        <option name="sankey_diagram_app.sankey_diagram.numOfBins">9</option>
        <option name="sankey_diagram_app.sankey_diagram.showLegend">true</option>
        <option name="sankey_diagram_app.sankey_diagram.useColors">true</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </viz>
    </panel>
  </row>
    <row>
    <panel>
        <html>
            <h1>App artefacts</h1>

            <p>The app contains the following artefacts worth noting:</p>
            <ul>
                <li>
                    Savedsearch: Generate Datamodel Event Summary - Scheduled<br/>
                    This search generates the lookup that contains a count of events indexed per sourcetype. It is run every 24 hours.
                </li>
                <li>
                    Savedsearch: Generate Sourcetype Summary - Scheduled<br/>
                    This search generates the lookup the contains all configured sourcetypes in the system. It is run every 24 hours.
                </li>
                <li>Savedsearch: Sample Sankey Diagram on Documentation Page<br/>
                    This search generates the lookup used by the Sankey diagram used on the documentation page. This search can be run to update the Sankey to the current environment instead of the bundled sample data.
                </li>
                <li>
                    Savedsearch: Generate MITRE matrix list<br/>
                    This search formats the MITRE Attack framework table into a list format.
                </li>
                <li>
                    Custom search command: getSSE<br/>
                    This custom search command getSSE extracts the content provided from the Splunk Security Essentials App into the search pipeline.
                </li>
            </ul>
        </html>
    </panel>
  </row>
</dashboard>