[getsse]
definition = getsse\
| eval hasSearch=spath(summaries, "hasSearch") \
| eval app=spath(summaries, "app") \
| where hasSearch="Yes" AND app="Splunk_Security_Essentials"\
| eval detection_search=coalesce(spath(summaries, "example1.object.value") ,spath(summaries, "example0.object.value"))\
| eval includeSSE=spath(summaries, "includeSSE") \
| eval datasource=spath(summaries, "datasource") \
| eval displayapp=spath(summaries, "displayapp") \
| eval journey=spath(summaries, "journey") \
| eval category=spath(summaries, "category") \
| eval domain=spath(summaries, "domain") \
| eval name=spath(summaries, "name") \
| eval icon=spath(summaries, "icon") \
| eval description=spath(summaries, "description") \
| eval dashboard=spath(summaries, "dashboard") \
| eval mitre=spath(summaries, "mitre") \
| eval killchain=spath(summaries, "killchain") \
| eval cis=spath(summaries, "cis") \
| eval alertvolume=spath(summaries, "alertvolume") \
| eval highlight=spath(summaries, "highlight") \
| eval SPLEase=spath(summaries, "SPLEase") \
| eval includeSSE=spath(summaries, "includeSSE") \
| eval bookmark_status=spath(summaries, "bookmark_status") \
| eval bookmark_user=spath(summaries, "bookmark_user") \
| eval usecase=spath(summaries, "usecase") \
| eval released=spath(summaries, "released") \
| foreach category datasourc* killchain mitre usecase \
    [| makemv <<FIELD>> delim="|" ] \
| eval usecase=mvdedup(usecase)\
| rename name AS csearch_label, detection_search as qualifiedSearch\
| table csearch_label qualifiedSearch usecase hasSearch includeSSE datasource displayapp app journey category domain icon description dashboard mitre killchain alertvolume bookmark_status
iseval = 0
